name: Auto Merge PR

on:
  pull_request:
    types: [opened, synchronize, reopened, ready_for_review]
  workflow_dispatch:  # Возможность запустить вручную
  workflow_run:
    workflows: ["Sync Fork"]  # Ждём завершения sync-fork.yml
    types:
      - completed

jobs:
  auto-merge:
    runs-on: ubuntu-latest

    steps:
      # Шаг 1: Клонирование репозитория
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          persist-credentials: false  # Используем PAT для пуша

      # Шаг 2: Настройка Git
      - name: Configure Git
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

      # Шаг 3: Проверка и очистка веток
      - name: Fix duplicate refspec error
        run: |
          git remote prune origin  # Очищаем устаревшие ссылки
          git fetch --all  # Обновляем все удаленные ветки
          git checkout main  # Переходим на основную ветку
          git reset --hard origin/main  # Сбрасываем все локальные изменения

      # Шаг 4: Подтягиваем последние изменения из основной ветки
      - name: Pull latest changes from origin
        run: |
          git fetch origin main  # Загружаем изменения из удаленного репозитория
          git checkout main  # Переходим на основную ветку
          git pull origin main --rebase  # Подтягиваем изменения с rebase для чистоты истории

      # Шаг 5: Мерджим изменения из PR
      - name: Merge PR branch
        env:
          PR_BRANCH: ${{ github.head_ref }}
        run: |
          git merge --no-ff origin/$PR_BRANCH || true  # Если конфликты, решаем вручную

      # Шаг 7: Отладка состояния Git
      - name: Debug Git State
        run: |
          git remote -v  # Проверяем удаленные репозитории
          git branch -a  # Смотрим все ветки
          git show-ref | grep main || echo "No main ref found"  # Проверяем, существует ли ветка main

      # Шаг 8: Пушим изменения в основную ветку
      - name: Push merged changes
        env:
          PAT_TOKEN: ${{ secrets.PAT_TOKEN }}
        run: |
          git remote set-url origin https://x-access-token:$PAT_TOKEN@github.com/${{ github.repository }}.git
          git push origin HEAD:main --force  # Форсируем пуш, если необходимо
